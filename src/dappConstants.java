/* Generated By:JavaCC: Do not edit this line. dappConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface dappConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int LETTER = 5;
  /** RegularExpression Id. */
  int DOT = 32;
  /** RegularExpression Id. */
  int ENG_NAME = 33;
  /** RegularExpression Id. */
  int NAME = 34;
  /** RegularExpression Id. */
  int NUMERIC_LITERAL = 35;
  /** RegularExpression Id. */
  int STRING_LITERAL = 36;
  /** RegularExpression Id. */
  int ARROW = 37;
  /** RegularExpression Id. */
  int LOGICAL_LITERAL = 38;
  /** RegularExpression Id. */
  int LESS = 39;
  /** RegularExpression Id. */
  int LESS_EQUAL = 40;
  /** RegularExpression Id. */
  int GREATER = 41;
  /** RegularExpression Id. */
  int GREATER_EQUAL = 42;
  /** RegularExpression Id. */
  int EQUAL = 43;
  /** RegularExpression Id. */
  int NOT_EQUAL = 44;
  /** RegularExpression Id. */
  int PLUS = 45;
  /** RegularExpression Id. */
  int MINUS = 46;
  /** RegularExpression Id. */
  int MULT = 47;
  /** RegularExpression Id. */
  int DIV = 48;
  /** RegularExpression Id. */
  int POW = 49;
  /** RegularExpression Id. */
  int AND = 50;
  /** RegularExpression Id. */
  int OR = 51;
  /** RegularExpression Id. */
  int NOT = 52;
  /** RegularExpression Id. */
  int ASSIGN = 53;
  /** RegularExpression Id. */
  int COMMA = 54;
  /** RegularExpression Id. */
  int L_PAREN = 55;
  /** RegularExpression Id. */
  int R_PAREN = 56;
  /** RegularExpression Id. */
  int L_BRACKET = 57;
  /** RegularExpression Id. */
  int R_BRACKET = 58;
  /** RegularExpression Id. */
  int L_BRACE = 59;
  /** RegularExpression Id. */
  int R_BRACE = 60;
  /** RegularExpression Id. */
  int COLON = 61;
  /** RegularExpression Id. */
  int SEMI_COLON = 62;
  /** RegularExpression Id. */
  int QUESTION = 63;
  /** RegularExpression Id. */
  int IDENTIFIER = 64;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<LETTER>",
    "\"\\uc2dc\\uc791\"",
    "\"\\uc744\"",
    "\"\\ub97c\"",
    "\"\\ub85c\"",
    "\"\\uc73c\\ub85c\"",
    "\"\\ud3ec\\ud568\"",
    "\"\\ub05d\"",
    "\"\\ub2f9\\uc7a5\"",
    "\"\\ub098\\uc640\"",
    "\"\\uc815\\uc218\\ud615\"",
    "\"\\uc2e4\\uc218\\ud615\"",
    "\"\\ube48\\ud615\"",
    "\"\\ub9de\\ub2c8\\ud615\"",
    "\"\\uae00\\uc790\\ud615\"",
    "\"\\ubb38\\uc7a5\\ud615\"",
    "\"\\uc0dd\\uc131\"",
    "\"\\ub9cc\\uc57d\"",
    "\"\\ub77c\\uba74\"",
    "\"\\uc544\\ub2c8\\uace0\"",
    "\"\\uc544\\ub2c8\\uba74\"",
    "\"\\uadf8\\uce58\\ub9cc\"",
    "\"\\ud558\\uba74\"",
    "\"\\ud558\\ub294\\uac78\"",
    "\"\\uc77c \\ub54c\"",
    "\"\\uc5d0\"",
    "\"\\ub300\\uc785\"",
    "\".\"",
    "<ENG_NAME>",
    "<NAME>",
    "<NUMERIC_LITERAL>",
    "<STRING_LITERAL>",
    "\"->\"",
    "<LOGICAL_LITERAL>",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"^\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "\"=\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "\";\"",
    "\"?\"",
    "<IDENTIFIER>",
    "\"\\\"\"",
    "\"\\\'\"",
    "\"%\"",
  };

}
